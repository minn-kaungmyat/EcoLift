@model EcoLift.Models.ViewModels.ChatViewModel
@{
    ViewData["Title"] = $"Chat with {Model.OtherParticipantName}";
    ViewData["HideFooter"] = true;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <!-- Chat Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div class="d-flex align-items-center">
                    <a asp-action="Inbox" class="btn btn-outline-secondary btn-sm me-3">
                        <i class="fas fa-arrow-left me-1"></i>Back to Inbox
                    </a>
                    <div>
                        <h1 class="h4 mb-0">@Model.OtherParticipantName</h1>
                        <p class="text-muted mb-0 small">@Model.TripRoute</p>
                    </div>
                </div>
            </div>

            <!-- Chat Messages -->
            <div class="card mb-3">
                <div class="card-body" id="chatMessages" style="height: 400px; overflow-y: auto;">
                    @if (!Model.Messages.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-comments fa-2x text-muted mb-3"></i>
                            <p class="text-muted">No messages yet. Start the conversation!</p>
                        </div>
                    }
                    else
                    {
                        @foreach (var message in Model.Messages)
                        {
                            <div class="d-flex mb-3 @(message.IsFromCurrentUser ? "justify-content-end" : "justify-content-start")">
                                <div class="message @(message.IsFromCurrentUser ? "message-own" : "message-other")" style="max-width: 70%;">
                                    <div class="message-content p-3 rounded">
                                        <p class="mb-1">@message.Content</p>
                                        <small class="text-muted">@message.TimeDisplay</small>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>

            <!-- Message Input -->
            <div class="card">
                <div class="card-body">
                    <form asp-action="Send" method="post" id="messageForm">
                        <input type="hidden" name="conversationId" value="@Model.ConversationId" />
                        <div class="input-group">
                            <input type="text" 
                                   name="content" 
                                   class="form-control" 
                                   placeholder="Type your message..." 
                                   maxlength="2000"
                                   required />
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-paper-plane"></i>
                            </button>
                        </div>
                        <div class="form-text text-end">
                            <span id="charCount">0</span>/2000 characters
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .message-own .message-content {
        background-color: #007bff;
        color: white;
    }
    
    .message-other .message-content {
        background-color: #f8f9fa;
        color: #212529;
    }
    
    .message-content {
        word-wrap: break-word;
    }
    
    #chatMessages::-webkit-scrollbar {
        width: 6px;
    }
    
    #chatMessages::-webkit-scrollbar-track {
        background: #f1f1f1;
    }
    
    #chatMessages::-webkit-scrollbar-thumb {
        background: #c1c1c1;
        border-radius: 3px;
    }
    
    #chatMessages::-webkit-scrollbar-thumb:hover {
        background: #a8a8a8;
    }
</style>

<script>
    // Auto-scroll to bottom of chat
    function scrollToBottom() {
        const chatMessages = document.getElementById('chatMessages');
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }
    
    // Character count
    document.querySelector('input[name="content"]').addEventListener('input', function() {
        const charCount = document.getElementById('charCount');
        charCount.textContent = this.value.length;
    });
    
    // Scroll to bottom on page load
    window.addEventListener('load', scrollToBottom);
    
    // Form submission
    document.getElementById('messageForm').addEventListener('submit', function(e) {
        const input = this.querySelector('input[name="content"]');
        if (!input.value.trim()) {
            e.preventDefault();
            input.focus();
        }
    });
</script>
