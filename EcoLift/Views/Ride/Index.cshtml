@{
    ViewData["Title"] = "My Rides & Bookings";
    ViewData["HideFooter"] = true;
}

<div class="rides-container">
    <!-- Header Section -->
    @* <div class="rides-header">
        <div class="container">
            <h1 class="rides-title">My Rides</h1>
            <p class="rides-subtitle">Manage your published rides and bookings</p>
        </div>
    </div> *@

    <div class="container">
        <!-- Published Rides Section -->
        <div class="rides-section">
            <div class="section-header">
                <div class="section-title">
                    @* <i class="fas fa-car"></i> *@
                    <span>Published Rides</span>
                    <span class="ride-count">@(ViewBag.PublishedRides?.Count ?? 0)</span>
                </div>
                <a asp-controller="Ride" asp-action="Create" class="btn-create-ride">
                    <i class="fas fa-plus"></i>
                    Create New Ride
                </a>
            </div>

            @if (ViewBag.PublishedRides != null && ViewBag.PublishedRides.Count > 0)
            {
                <div class="rides-grid">
                    @foreach (var ride in ViewBag.PublishedRides)
                    {
                        <div class="ride-card">
                            <div class="ride-header">
                                <div class="ride-route">
                                    <div class="route-point pickup">
                                        <i class="fas fa-circle"></i>
                                        <span>@ride.PickupLocation</span>
                                    </div>
                                    <div class="route-line">
                                        <i class="fas fa-arrow-right"></i>
                                    </div>
                                    <div class="route-point dropoff">
                                        <i class="fas fa-map-marker-alt"></i>
                                        <span>@ride.DropoffLocation</span>
                                    </div>
                                </div>
                                <div class="ride-status">
                                    @switch (ride.Status)
                                    {
                                        case EcoLift.Models.Enums.TripStatus.Published:
                                            <span class="status-badge published">Published</span>
                                            break;
                                        case EcoLift.Models.Enums.TripStatus.PartiallyBooked:
                                            <span class="status-badge partially-booked">Partially Booked</span>
                                            break;
                                        case EcoLift.Models.Enums.TripStatus.Full:
                                            <span class="status-badge full">Full</span>
                                            break;
                                        case EcoLift.Models.Enums.TripStatus.Ongoing:
                                            <span class="status-badge ongoing">Ongoing</span>
                                            break;
                                        case EcoLift.Models.Enums.TripStatus.Completed:
                                            <span class="status-badge completed">Completed</span>
                                            break;
                                        case EcoLift.Models.Enums.TripStatus.Cancelled:
                                            <span class="status-badge cancelled">Cancelled</span>
                                            break;
                                        default:
                                            <span class="status-badge active">Active</span>
                                            break;
                                    }
                                </div>
                            </div>

                            <div class="ride-details">
                                <div class="detail-row">
                                    <div class="detail-item">
                                        <i class="fas fa-calendar"></i>
                                        <span>@ride.DepartureDate.ToString("MMM dd, yyyy")</span>
                                    </div>
                                    <div class="detail-item">
                                        <i class="fas fa-clock"></i>
                                        <span>@(ride.DepartureTime.Hours.ToString("00")):@(ride.DepartureTime.Minutes.ToString("00"))</span>
                                    </div>
                                </div>
                                <div class="detail-row">
                                    <div class="detail-item">
                                        <i class="fas fa-users"></i>
                                        <span>@ride.AvailableSeats seats available</span>
                                    </div>
                                    <div class="detail-item price">
                                        @* <i class="fas fa-euro-sign"></i> *@
                                        <span>â‚¬@ride.PricePerSeat per seat</span>
                                    </div>
                                </div>
                                @if (!string.IsNullOrEmpty(ride.Notes))
                                {
                                    <div class="ride-notes">
                                        <i class="fas fa-info-circle"></i>
                                        <span>@ride.Notes</span>
                                    </div>
                                }
                            </div>

                            <div class="ride-actions">
                                <a asp-controller="Ride" asp-action="Edit" asp-route-id="@ride.TripId" class="btn-action btn-edit">
                                    <i class="fas fa-edit"></i>
                                    Edit
                                </a>
                                <a href="#" class="btn-action btn-bookings">
                                    <i class="fas fa-list"></i>
                                    View Bookings
                                </a>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    @* <div class="empty-icon">
                        <i class="fas fa-car"></i>
                    </div> *@
                    <h3>No rides published yet</h3>
                    <p>Start sharing your journey and help others travel sustainably</p>
                    <a asp-controller="Ride" asp-action="Create" class="btn-primary">Create Your First Ride</a>
                </div>
            }
        </div>

        <!-- Booked Rides Section -->
        <div class="rides-section">
            <div class="section-header">
                <div class="section-title">
                    @* <i class="fas fa-ticket-alt"></i> *@
                    <span>Booked Rides</span>
                    <span class="ride-count">@(ViewBag.BookedRides?.Count ?? 0)</span>
                </div>
            </div>

            @if (ViewBag.BookedRides != null && ViewBag.BookedRides.Count > 0)
            {
                <div class="rides-grid">
                    @foreach (var booking in ViewBag.BookedRides)
                    {
                        var ride = booking.Trip;
                        <div class="ride-card booked">
                            <div class="ride-header">
                                <div class="ride-route">
                                    <div class="route-point pickup">
                                        <i class="fas fa-circle"></i>
                                        <span>@ride.PickupLocation</span>
                                    </div>
                                    <div class="route-line">
                                        <i class="fas fa-arrow-right"></i>
                                    </div>
                                    <div class="route-point dropoff">
                                        <i class="fas fa-map-marker-alt"></i>
                                        <span>@ride.DropoffLocation</span>
                                    </div>
                                </div>
                                <div class="ride-status">
                                    <span class="status-badge @booking.Status.ToString().ToLowerInvariant()">@booking.Status</span>
                                </div>
                            </div>

                            <div class="ride-details">
                                <div class="detail-row">
                                    <div class="detail-item">
                                        <i class="fas fa-calendar"></i>
                                        <span>@ride.DepartureDate.ToString("MMM dd, yyyy")</span>
                                    </div>
                                    <div class="detail-item">
                                        <i class="fas fa-clock"></i>
                                        <span>@(ride.DepartureTime.Hours.ToString("00")):@(ride.DepartureTime.Minutes.ToString("00"))</span>
                                    </div>
                                </div>
                                <div class="detail-row">
                                    <div class="detail-item">
                                        <i class="fas fa-user"></i>
                                        <span>@ride.Provider.FirstName @ride.Provider.LastName</span>
                                    </div>
                                    <div class="detail-item price">
                                        @* <i class="fas fa-euro-sign"></i> *@
                                        <span>â‚¬@ride.PricePerSeat per seat</span>
                                    </div>
                                </div>
                            </div>

                            <div class="ride-actions">
                                @if (booking.Status == EcoLift.Models.Enums.BookingStatus.Confirmed)
                                {
                                    <a href="@Url.Action("Chat", "Message", new { conversationId = booking.ConversationId })" class="btn-action btn-contact">
                                        <i class="fas fa-comment"></i>
                                        Message Driver
                                    </a>
                                    @if (booking.Trip.DepartureDateTime > DateTime.Now.AddHours(24))
                                    {
                                        <form method="post" action="@Url.Action("Cancel", "Booking", new { id = booking.BookingId })" class="d-inline" onsubmit="return confirm('Are you sure you want to cancel this booking?')">
                                            <button type="submit" class="btn-action btn-cancel">
                                                <i class="fas fa-times"></i>
                                                Cancel Booking
                                            </button>
                                        </form>
                                    }
                                }
                                else
                                {
                                    <span class="btn-action disabled" title="Messaging available after booking confirmation">
                                        <i class="fas fa-comment"></i>
                                        Message Driver
                                    </span>
                                }
                                <a href="#" class="btn-action btn-details">
                                    <i class="fas fa-eye"></i>
                                    View Details
                                </a>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">

                    <h3>No booked rides yet</h3>
                    <p>Find and book rides from other drivers in your area</p>
                    <a asp-controller="Home" asp-action="Search" class="btn-primary">Search for Rides</a>
                </div>
            }
        </div>
    </div>
</div>

<style>
.rides-container {
    background-color: #white;
    min-height: 100vh;
    padding-block: 1.5rem;
}

.rides-header {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-color-dark) 100%);
    color: white;
    padding: 3rem 0 2rem;
    margin-bottom: 2rem;
}

.rides-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0;
    color: white;
}

.rides-subtitle {
    font-size: 1.1rem;
    opacity: 0.9;
    margin: 0.5rem 0 0;
    font-weight: 300;
}

.rides-section {
    background: white;
    border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    margin-bottom: 2rem;
    overflow: hidden;
}

.section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 2rem;
    border-bottom: 1px solid #e9ecef;
    background-color: #fafbfc;
}

.section-title {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--secondary-color);
}

.section-title i {
    color: var(--primary-color);
    font-size: 1.1rem;
}

.ride-count {
    background-color: var(--primary-color);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 500;
}

.btn-create-ride {
    background-color: var(--primary-color);
    color: white;
    padding: 0.5rem 1.25rem;
    border-radius: 8px;
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 500;
    transition: background-color 0.2s ease;
}

.btn-create-ride:hover {
    background-color: var(--primary-color-dark);
    color: white;
    text-decoration: none;
}

/* Cancel button styling */
.btn-cancel {
    background: #dc3545 !important;
    color: white !important;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-size: 0.875rem;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

.btn-cancel:hover {
    background: #c82333 !important;
    color: white !important;
}

/* Disabled button styling */
.btn-action.disabled {
    background: #6c757d;
    color: #adb5bd;
    cursor: not-allowed;
    opacity: 0.6;
}

.btn-action.disabled:hover {
    background: #6c757d;
    color: #adb5bd;
    text-decoration: none;
}

.rides-grid {
    padding: 1.5rem 2rem;
}

.ride-card {
    border: 1px solid #e9ecef;
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 1rem;
    background: white;
    /* transition: box-shadow 0.2s ease, border-color 0.2s ease; */
}

.ride-card:hover {
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
    /* border-color: #d1d5db; */
}

.ride-card:last-child {
    margin-bottom: 0;
}

.ride-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1.25rem;
}

.ride-route {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex: 1;
}

.route-point {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
    color: var(--secondary-color);
}

.route-point.pickup i {
    color: var(--success-color);
    font-size: 0.75rem;
}

.route-point.dropoff i {
    color: var(--primary-color);
    font-size: 1rem;
}

.route-line {
    color: #9ca3af;
    flex: 1;
    text-align: center;
}

.ride-status {
    margin-left: 1rem;
}

.status-badge {
    padding: 0.375rem 0.875rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.status-badge.published {
    background-color: #d1fae5;
    color: #065f46;
}

.status-badge.partially-booked {
    background-color: #fef3c7;
    color: #92400e;
}

.status-badge.full {
    background-color: #fee2e2;
    color: #991b1b;
}

.status-badge.ongoing {
    background-color: #dbeafe;
    color: #1e40af;
}

.status-badge.completed {
    background-color: #d1fae5;
    color: #065f46;
}

.status-badge.cancelled {
    background-color: #f3f4f6;
    color: #6b7280;
}

.status-badge.active {
    background-color: #d1fae5;
    color: #065f46;
}

.status-badge.inactive {
    background-color: #f3f4f6;
    color: #6b7280;
}

.status-badge.confirmed {
    background-color: #d1fae5;
    color: #065f46;
}

.status-badge.pending {
    background-color: #fef3c7;
    color: #92400e;
}

.status-badge.cancelled {
    background-color: #fee2e2;
    color: #991b1b;
}

.ride-details {
    margin-bottom: 1.25rem;
}

.detail-row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.75rem;
}

.detail-row:last-child {
    margin-bottom: 0;
}

.detail-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: #6b7280;
    font-size: 0.875rem;
}

.detail-item i {
    color: #9ca3af;
    width: 16px;
    text-align: center;
}

.detail-item.price {
    font-weight: 600;
    color: var(--primary-color);
}

.ride-notes {
    display: flex;
    align-items: flex-start;
    gap: 0.5rem;
    padding: 0.75rem;
    background-color: #f8f9fa;
    border-radius: 8px;
    margin-top: 0.75rem;
    font-size: 0.875rem;
    color: #6b7280;
}

.ride-notes i {
    color: var(--primary-color);
    margin-top: 0.125rem;
}

.ride-actions {
    display: flex;
    gap: 0.75rem;
    padding-top: 1rem;
    border-top: 1px solid #f3f4f6;
}

.btn-action {
    padding: 0.5rem 1.25rem;
    border-radius: 8px;
    text-decoration: none;
    font-size: 0.875rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
    border: 1px solid transparent;
}

.btn-edit {
    background-color: #f8f9fa;
    color: var(--secondary-color);
    border-color: #e9ecef;
}

.btn-edit:hover {
    background-color: #e9ecef;
    color: var(--secondary-color);
    text-decoration: none;
}

.btn-bookings, .btn-details {
    background-color: var(--primary-color);
    color: white;
}

.btn-bookings:hover, .btn-details:hover {
    background-color: var(--primary-color-dark);
    color: white;
    text-decoration: none;
}

.btn-contact {
    background-color: white;
    color: var(--primary-color);
    border-color: var(--primary-color);
}

.btn-contact:hover {
    background-color: var(--primary-color);
    color: white;
    text-decoration: none;
}

.empty-state {
    text-align: center;
    padding: 3rem 2rem;
}

.empty-icon {
    font-size: 4rem;
    color: #d1d5db;
    margin-bottom: 1.5rem;
}

.empty-state h3 {
    color: var(--secondary-color);
    margin-bottom: 0.75rem;
    font-weight: 600;
}

.empty-state p {
    color: #6b7280;
    margin-bottom: 1.5rem;
    font-size: 1rem;
}

.btn-primary {
    background-color: var(--primary-color);
    color: white;
    padding: 0.5rem 1.25rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    transition: background-color 0.2s ease;
}

.btn-primary:hover {
    background-color: var(--primary-color-dark);
    color: white;
    text-decoration: none;
}

/* Responsive Design */
@@media (max-width: 768px) {
    .rides-header {
        padding: 2rem 0 1.5rem;
    }
    
    .rides-title {
        font-size: 2rem;
    }
    
    .section-header {
        flex-direction: column;
        gap: 1rem;
        align-items: flex-start;
        padding: 1.25rem 1.5rem;
    }
    
    .rides-grid {
        padding: 1rem 1.5rem;
    }
    
    .ride-card {
        padding: 1.25rem;
    }
    
    .ride-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }
    
    .ride-route {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
    }
    
    .route-line {
        display: none;
    }
    
    .detail-row {
        flex-direction: column;
        gap: 0.5rem;
    }
    
    .ride-actions {
        flex-direction: column;
    }
    
    .btn-action {
        justify-content: center;
    }
}
</style>
