@model EcoLift.Models.Trip

@{
    ViewData["Title"] = "Ride Details";
    ViewData["HideFooter"] = true;
    bool isProvider = ViewBag.IsProvider ?? false;
    var userBookings = ViewBag.UserBookings as List<EcoLift.Models.Booking>;
    var userBooking = ViewBag.UserBooking as EcoLift.Models.Booking;
}

<div class="ride-details-container">
    

    <div class="container" style="padding-top: 1.5rem">
        <div class="ride-details-content">
            <!-- Ride Overview Card -->
            <div class="ride-overview-card">
                <div class="ride-header">
                    <div class="ride-route">
                        <div class="route-point pickup">
                            <i class="fas fa-circle"></i>
                            <span>@Model.PickupLocation</span>
                        </div>
                        <div class="route-line">
                            <i class="fas fa-arrow-right"></i>
                        </div>
                        <div class="route-point dropoff">
                            <i class="fas fa-map-marker-alt"></i>
                            <span>@Model.DropoffLocation</span>
                        </div>
                    </div>
                    <div class="ride-status">
                        <span class="status-badge @(Model.Status.ToString().ToLowerInvariant())">@Model.Status</span>
                    </div>
                </div>

                <div class="ride-details-grid">
                    <div class="detail-section">
                        <h4><i class="fas fa-calendar"></i> Date & Time</h4>
                        <div class="detail-info">
                            <div class="info-item">
                                <span class="label">Departure Date:</span>
                                <span class="value">@Model.DepartureDate.ToString("dddd, MMMM dd, yyyy")</span>
                            </div>
                            <div class="info-item">
                                <span class="label">Departure Time:</span>
                                <span class="value">@Model.DepartureTime.ToString(@"hh\:mm")</span>
                            </div>
                            <div class="info-item">
                                <span class="label">Duration:</span>
                                <span class="value">Approximately 2 hours</span>
                            </div>
                        </div>
                    </div>

                    <div class="detail-section">
                        <h4><i class="fas fa-users"></i> Seats & Pricing</h4>
                        <div class="detail-info">
                            <div class="info-item">
                                <span class="label">Available Seats:</span>
                                <span class="value">@Model.AvailableSeats</span>
                            </div>
                            <div class="info-item">
                                <span class="label">Booked Seats:</span>
                                <span class="value">@Model.BookedSeats</span>
                            </div>
                            <div class="info-item">
                                <span class="label">Remaining Seats:</span>
                                <span class="value">@Model.RemainingSeats</span>
                            </div>
                            <div class="info-item">
                                <span class="label">Price per Seat:</span>
                                <span class="value price">â‚¬@Model.PricePerSeat</span>
                            </div>
                        </div>
                    </div>

                   

                    <div class="detail-section">
                        <h4><i class="fas fa-info-circle"></i> Additional Information</h4>
                        <div class="detail-info">
                            <div class="info-item">
                                <span class="label">Allow Smoking:</span>
                                <span class="value">@(Model.AllowSmoking ? "Yes" : "No")</span>
                            </div>
                            <div class="info-item">
                                <span class="label">Allow Pets:</span>
                                <span class="value">@(Model.AllowPets ? "Yes" : "No")</span>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.Notes))
                            {
                                <div class="info-item notes">
                                    <span class="label">Notes:</span>
                                    <span class="value">@Model.Notes</span>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="ride-actions-section">
                <div class="actions-container">
                    @if (isProvider)
                    {
                        <!-- Provider Actions -->
                        <div class="action-group">
                            <a asp-controller="Ride" asp-action="Edit" asp-route-id="@Model.TripId" class="btn-action btn-primary">
                                <i class="fas fa-edit"></i>
                                Edit Ride
                            </a>
                            <button type="button" class="btn-action btn-danger" onclick="alert('Cancel ride functionality will be implemented soon.');">
                                <i class="fas fa-times"></i>
                                Cancel Ride
                            </button>
                        </div>
                        <div class="action-group">
                            <a asp-controller="Ride" asp-action="Index" class="btn-action btn-secondary">
                                <i class="fas fa-arrow-left"></i>
                                Back to My Rides
                            </a>
                        </div>
                    }
                    else
                    {
                        <!-- Passenger Actions -->
                        <div class="action-group">
                            @if (userBooking != null && userBooking.Status == EcoLift.Models.Enums.BookingStatus.Confirmed)
                            {
                                <a href="@Url.Action("Chat", "Message", new { conversationId = userBooking.ConversationId })" class="btn-action btn-primary">
                                    <i class="fas fa-comment"></i>
                                    Message Driver
                                </a>
                                @if (Model.DepartureDateTime > DateTime.Now.AddHours(24))
                                {
                                    <form method="post" action="@Url.Action("Cancel", "Booking", new { id = userBooking.BookingId })" class="d-inline">
                                        <button type="submit" class="btn-action btn-danger" onclick="return confirm('Are you sure you want to cancel this booking?')">
                                            <i class="fas fa-times"></i>
                                            Cancel Booking
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <span class="btn-action btn-disabled" title="Cannot cancel within 24 hours of departure">
                                        <i class="fas fa-times"></i>
                                        Cannot Cancel
                                    </span>
                                }
                            }
                            else
                            {
                                <span class="btn-action btn-disabled" title="Actions available after booking confirmation">
                                    <i class="fas fa-comment"></i>
                                    Message Driver
                                </span>
                                <span class="btn-action btn-disabled" title="Actions available after booking confirmation">
                                    <i class="fas fa-times"></i>
                                    Cancel Booking
                                </span>
                            }
                        </div>
                        <div class="action-group">
                            <a asp-controller="Ride" asp-action="Index" class="btn-action btn-secondary">
                                <i class="fas fa-arrow-left"></i>
                                Back to My Rides
                            </a>
                        </div>
                    }
                </div>
            </div>

            <!-- Booked Users Section (Only for Providers) -->
            @if (isProvider && userBookings != null && userBookings.Any())
            {
                <div class="booked-users-section">
                    <div class="section-header">
                        <h3><i class="fas fa-users"></i> Booked Passengers (@userBookings.Count)</h3>
                        <p class="section-subtitle">Manage your passengers and communicate with them</p>
                    </div>

                    <div class="passengers-grid">
                        @foreach (var booking in userBookings)
                        {
                            <div class="passenger-card">
                                <div class="passenger-info">
                                    <div class="passenger-avatar">
                                        <i class="fas fa-user"></i>
                                    </div>
                                    <div class="passenger-details">
                                        <h5>@booking.Seeker.FirstName @booking.Seeker.LastName</h5>
                                        <div class="passenger-meta">
                                            <span class="seats-booked">@booking.SeatsBooked seat@(booking.SeatsBooked > 1 ? "s" : "") booked</span>
                                            <span class="booking-date">Booked on @booking.BookingDate.ToString("MMM dd, yyyy")</span>
                                        </div>
                                        <div class="booking-status">
                                            <span class="status-badge @booking.Status.ToString().ToLowerInvariant()">@booking.Status</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="passenger-actions">
                                    @if (booking.Status == EcoLift.Models.Enums.BookingStatus.Confirmed)
                                    {
                                        <a href="@Url.Action("Chat", "Message", new { conversationId = booking.ConversationId })" class="btn-message">
                                            <i class="fas fa-comment"></i>
                                            Message
                                        </a>
                                        <a href="@Url.Action("ViewUser", "Profile", new { id = booking.SeekerId })" class="btn-profile">
                                            <i class="fas fa-user"></i>
                                            View Profile
                                        </a>
                                        <a href="mailto:@booking.Seeker.Email" class="btn-email">
                                            <i class="fas fa-envelope"></i>
                                            Email
                                        </a>
                                    }
                                    <div class="booking-amount">
                                        <span class="amount">â‚¬@(booking.TotalCost)</span>
                                        <span class="label">Total</span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Driver Information (Only for Booked Rides) -->
            @if (!isProvider)
            {
                <div class="driver-info-section">
                    <div class="section-header">
                        <h3><i class="fas fa-user-tie"></i> Driver Information</h3>
                        <p class="section-subtitle">Get to know your driver before the trip</p>
                    </div>

                    <div class="driver-card">
                        <div class="driver-info">
                            <div class="driver-avatar">
                                <i class="fas fa-user"></i>
                            </div>
                            <div class="driver-details">
                                <h4>@Model.Provider.FirstName @Model.Provider.LastName</h4>
                                <div class="driver-meta">
                                    <span class="member-since">Member since @Model.Provider.RegistrationDate.ToString("MMM yyyy")</span>
                                    @if (userBooking != null)
                                    {
                                        <span class="booking-status">
                                            <span class="status-badge @userBooking.Status.ToString().ToLowerInvariant()">@userBooking.Status</span>
                                        </span>
                                    }
                                </div>
                                @if (!string.IsNullOrEmpty(Model.Provider.Bio))
                                {
                                    <div class="driver-bio">
                                        <p>@Model.Provider.Bio</p>
                                    </div>
                                }
                            </div>
                        </div>

                        <!-- Driver Stats and Vehicle Info -->
                        <div class="driver-stats-section">
                            <div class="stats-grid">
                                <div class="stat-item">
                                    <div class="stat-icon">
                                        <i class="fas fa-star"></i>
                                    </div>
                                    <div class="stat-info">
                                        <span class="stat-value">4.8</span>
                                        <span class="stat-label">Rating</span>
                                    </div>
                                </div>
                                <div class="stat-item">
                                    <div class="stat-icon">
                                        <i class="fas fa-route"></i>
                                    </div>
                                    <div class="stat-info">
                                        <span class="stat-value">150+</span>
                                        <span class="stat-label">Trips</span>
                                    </div>
                                </div>
                                <div class="stat-item">
                                    <div class="stat-icon">
                                        <i class="fas fa-users"></i>
                                    </div>
                                    <div class="stat-info">
                                        <span class="stat-value">@Model.BookedSeats/@Model.AvailableSeats</span>
                                        <span class="stat-label">Passengers</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Vehicle Information -->
                            @if (Model.Vehicle != null)
                            {
                                <div class="vehicle-preview">
                                    <div class="vehicle-icon">
                                        <i class="fas fa-car"></i>
                                    </div>
                                    <div class="vehicle-info">
                                        <h6>@Model.Vehicle.Brand @Model.Vehicle.Model</h6>
                                        <p class="vehicle-details">@Model.Vehicle.Color â€¢ @Model.Vehicle.LicensePlate</p>
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- Driver Actions -->
                        <div class="driver-actions">
                            @if (userBooking != null && userBooking.Status == EcoLift.Models.Enums.BookingStatus.Confirmed)
                            {
                                <a href="@Url.Action("Chat", "Message", new { conversationId = userBooking.ConversationId })" class="btn-message">
                                    <i class="fas fa-comment"></i>
                                    Message Driver
                                </a>
                                <a href="@Url.Action("ViewUser", "Profile", new { id = Model.ProviderId })" class="btn-profile">
                                    <i class="fas fa-user"></i>
                                    View Profile
                                </a>
                                <a href="mailto:@Model.Provider.Email" class="btn-email">
                                    <i class="fas fa-envelope"></i>
                                    Email Driver
                                </a>
                            }
                            else
                            {
                                <span class="btn-action btn-disabled" title="Actions available after booking confirmation">
                                    <i class="fas fa-comment"></i>
                                    Message Driver
                                </span>
                                <span class="btn-action btn-disabled" title="Actions available after booking confirmation">
                                    <i class="fas fa-user"></i>
                                    View Profile
                                </span>
                                <span class="btn-action btn-disabled" title="Actions available after booking confirmation">
                                    <i class="fas fa-envelope"></i>
                                    Email Driver
                                </span>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
.ride-details-container {
    background-color: #f8f9fa;
    min-height: 100vh;
    padding: 0;
}

.ride-details-header {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-color-dark) 100%);
    color: white;
    padding: 3rem 0 2rem;
    margin-bottom: 2rem;
}

.breadcrumb {
    background: transparent;
    margin-bottom: 1rem;
}

.breadcrumb-item a {
    color: rgba(255, 255, 255, 0.8);
    text-decoration: none;
}

.breadcrumb-item a:hover {
    color: white;
    text-decoration: underline;
}

.breadcrumb-item.active {
    color: white;
}

.ride-details-title {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0;
    color: white;
}

.ride-details-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem 2rem;
}

.ride-overview-card {
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    padding: 2rem;
    margin-bottom: 2rem;
    overflow: hidden;
}

.ride-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 2rem;
    padding-bottom: 1.5rem;
    border-bottom: 2px solid #f3f4f6;
}

.ride-route {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex: 1;
}

.route-point {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
    color: var(--secondary-color);
    font-size: 1.1rem;
}

.route-point.pickup i {
    color: var(--success-color);
    font-size: 0.75rem;
}

.route-point.dropoff i {
    color: var(--primary-color);
    font-size: 1rem;
}

.route-line {
    color: #9ca3af;
    flex: 1;
    text-align: center;
}

.ride-status {
    margin-left: 1rem;
}

.status-badge {
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.status-badge.published {
    background-color: #d1fae5;
    color: #065f46;
}

.status-badge.partiallybooked {
    background-color: #fef3c7;
    color: #92400e;
}

.status-badge.full {
    background-color: #fee2e2;
    color: #991b1b;
}

.status-badge.ongoing {
    background-color: #dbeafe;
    color: #1e40af;
}

.status-badge.completed {
    background-color: #d1fae5;
    color: #065f46;
}

.status-badge.cancelled {
    background-color: #f3f4f6;
    color: #6b7280;
}

.status-badge.confirmed {
    background-color: #d1fae5;
    color: #065f46;
}

.status-badge.pending {
    background-color: #fef3c7;
    color: #92400e;
}

.ride-details-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
}

.detail-section {
    background: #f8f9fa;
    border-radius: 12px;
    padding: 1.5rem;
}

.detail-section h4 {
    margin: 0 0 1rem 0;
    color: var(--secondary-color);
    font-size: 1.1rem;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.detail-section h4 i {
    color: var(--primary-color);
}

.detail-info {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.info-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0;
}

.info-item .label {
    font-weight: 500;
    color: #6b7280;
    font-size: 0.9rem;
}

.info-item .value {
    font-weight: 600;
    color: var(--secondary-color);
    text-align: right;
}

.info-item .value.price {
    color: var(--primary-color);
    font-size: 1.1rem;
}

.info-item.notes {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.25rem;
}

.info-item.notes .value {
    text-align: left;
    color: #374151;
    line-height: 1.5;
    background: white;
    padding: 0.75rem;
    border-radius: 8px;
    border: 1px solid #e5e7eb;
}

.ride-actions-section {
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    padding: 1.5rem;
    margin-bottom: 2rem;
}

.actions-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2rem;
    flex-wrap: wrap;
}

.action-group {
    display: flex;
    gap: 1rem;
    align-items: center;
    flex-wrap: wrap;
}

.btn-action {
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    text-decoration: none;
    font-size: 0.9rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
    border: 1px solid transparent;
    white-space: nowrap;
    cursor: pointer;
    min-width: fit-content;
}

/* Primary Actions */
.btn-primary {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
}

.btn-primary:hover {
    background-color: var(--primary-color-dark);
    color: white;
    text-decoration: none;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

/* Danger Actions */
.btn-danger {
    background-color: #dc3545;
    color: white;
    border-color: #dc3545;
}

.btn-danger:hover {
    background-color: #c82333;
    color: white;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
}

/* Secondary Actions */
.btn-secondary {
    background-color: #6c757d;
    color: white;
    border-color: #6c757d;
}

.btn-secondary:hover {
    background-color: #5a6268;
    color: white;
    text-decoration: none;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

/* Disabled Actions */
.btn-disabled {
    background-color: #e9ecef;
    color: #6c757d;
    border-color: #e9ecef;
    cursor: not-allowed;
    opacity: 0.6;
}

.booked-users-section {
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    padding: 2rem;
    margin-bottom: 2rem;
}

.section-header {
    margin-bottom: 2rem;
}

.section-header h3 {
    margin: 0 0 0.5rem 0;
    color: var(--secondary-color);
    font-size: 1.5rem;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.section-header h3 i {
    color: var(--primary-color);
}

.section-subtitle {
    margin: 0;
    color: #6b7280;
    font-size: 0.95rem;
}

.passengers-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 1rem;
}

.passenger-card {
    background: #f8f9fa;
    border-radius: 12px;
    padding: 1.5rem;
    border: 1px solid #e9ecef;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.passenger-info {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex: 1;
}

.passenger-avatar {
    width: 50px;
    height: 50px;
    background: var(--primary-color);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.2rem;
}

.passenger-details h5 {
    margin: 0 0 0.5rem 0;
    color: var(--secondary-color);
    font-size: 1.1rem;
    font-weight: 600;
}

.passenger-meta {
    display: flex;
    gap: 1rem;
    margin-bottom: 0.5rem;
}

.seats-booked, .booking-date {
    font-size: 0.85rem;
    color: #6b7280;
}

.booking-status {
    margin-top: 0.25rem;
}

.passenger-actions {
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.btn-message, .btn-email {
    padding: 0.5rem 1rem;
    border-radius: 6px;
    text-decoration: none;
    font-size: 0.85rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    transition: all 0.2s ease;
}

.btn-message {
    background-color: var(--primary-color);
    color: white;
}

.btn-message:hover {
    background-color: var(--primary-color-dark);
    color: white;
    text-decoration: none;
}

.btn-email {
    background-color: #28a745;
    color: white;
}

.btn-email:hover {
    background-color: #218838;
    color: white;
    text-decoration: none;
}

.btn-profile {
    background-color: #6c757d;
    color: white;
}

.btn-profile:hover {
    background-color: #5a6268;
    color: white;
    text-decoration: none;
}

.booking-amount {
    text-align: center;
    margin-left: 1rem;
    padding-left: 1rem;
    border-left: 1px solid #e9ecef;
}

.booking-amount .amount {
    display: block;
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--primary-color);
}

.booking-amount .label {
    font-size: 0.75rem;
    color: #6b7280;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.driver-info-section {
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    padding: 2rem;
    margin-bottom: 2rem;
}

.driver-card {
    display: flex;
    flex-direction: column;
    gap: 2rem;
}

.driver-info {
    display: flex;
    align-items: flex-start;
    gap: 1.5rem;
}

.driver-avatar {
    width: 60px;
    height: 60px;
    background: var(--primary-color);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.5rem;
    flex-shrink: 0;
}

.driver-details {
    flex: 1;
}

.driver-details h4 {
    margin: 0 0 0.5rem 0;
    color: var(--secondary-color);
    font-size: 1.2rem;
    font-weight: 600;
}

.driver-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    align-items: center;
    margin-bottom: 0.75rem;
}

.member-since {
    color: #6b7280;
    font-size: 0.85rem;
}

.booking-status .status-badge {
    font-size: 0.75rem;
    padding: 0.25rem 0.75rem;
}

.driver-bio {
    margin-top: 0.75rem;
}

.driver-bio p {
    margin: 0;
    color: #4b5563;
    line-height: 1.5;
    font-size: 0.9rem;
}

/* Driver Stats Section */
.driver-stats-section {
    background: #f8f9fa;
    border-radius: 12px;
    padding: 1.5rem;
}

.stats-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
    margin-bottom: 1.5rem;
}

.stat-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    background: white;
    border-radius: 8px;
    border: 1px solid #e9ecef;
}

.stat-icon {
    width: 35px;
    height: 35px;
    background: var(--primary-color);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 0.9rem;
}

.stat-info {
    display: flex;
    flex-direction: column;
}

.stat-value {
    font-size: 1rem;
    font-weight: 600;
    color: var(--secondary-color);
    line-height: 1.2;
}

.stat-label {
    font-size: 0.75rem;
    color: #6b7280;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

/* Vehicle Preview */
.vehicle-preview {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem;
    background: white;
    border-radius: 8px;
    border: 1px solid #e9ecef;
}

.vehicle-icon {
    width: 40px;
    height: 40px;
    background: #28a745;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1rem;
}

.vehicle-info h6 {
    margin: 0 0 0.25rem 0;
    color: var(--secondary-color);
    font-size: 0.95rem;
    font-weight: 600;
}

.vehicle-details {
    margin: 0;
    color: #6b7280;
    font-size: 0.8rem;
}

/* Driver Actions */
.driver-actions {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
}

/* Tablet Responsive Design */
@@media (max-width: 992px) {
    .passengers-grid {
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1rem;
    }
}

/* Mobile Responsive Design */
@@media (max-width: 768px) {
    .ride-details-header {
        padding: 2rem 0 1.5rem;
    }

    .ride-details-title {
        font-size: 2rem;
    }

    .ride-overview-card {
        padding: 1.5rem;
    }

    .ride-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }

    .ride-route {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
    }

    .route-line {
        display: none;
    }

    .ride-details-grid {
        grid-template-columns: 1fr;
        gap: 1rem;
    }

    .actions-container {
        flex-direction: column;
        align-items: stretch;
        gap: 1rem;
    }

    .action-group {
        justify-content: center;
        width: 100%;
    }

    .btn-action {
        justify-content: center;
        width: 100%;
        margin-bottom: 0.5rem;
    }

    /* Booked Users Section Responsive */
    .booked-users-section {
        padding: 1.5rem;
    }

    .section-header h3 {
        font-size: 1.25rem;
        flex-wrap: wrap;
    }

    .passengers-grid {
        grid-template-columns: 1fr;
        gap: 1rem;
    }

    .passenger-card {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
        padding: 1.25rem;
    }

    .passenger-info {
        width: 100%;
    }

    .passenger-avatar {
        width: 45px;
        height: 45px;
        margin-bottom: 0.5rem;
    }

    .passenger-details h5 {
        font-size: 1rem;
        margin-bottom: 0.5rem;
    }

    .passenger-meta {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.25rem;
        margin-bottom: 0.75rem;
    }

    .passenger-actions {
        width: 100%;
        flex-direction: column;
        gap: 0.75rem;
        align-items: stretch;
    }

    .passenger-actions .btn-message,
    .passenger-actions .btn-email {
        justify-content: center;
        padding: 0.5rem 1rem;
        font-size: 0.85rem;
    }

    .booking-amount {
        margin-left: 0;
        padding-left: 0;
        border-left: none;
        text-align: center;
        border-top: 1px solid #e9ecef;
        padding-top: 0.75rem;
        margin-top: 0.75rem;
    }

    .provider-actions {
        flex-direction: column;
        gap: 0.5rem;
    }

    .provider-card {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }

    .provider-avatar {
        width: 50px;
        height: 50px;
    }

    .provider-details h4 {
        font-size: 1.1rem;
    }

    .provider-actions {
        width: 100%;
        flex-direction: column;
        gap: 0.75rem;
        align-items: stretch;
    }

    .provider-actions .btn-message {
        justify-content: center;
        width: 100%;
    }

    /* Driver Info Section Responsive */
    .driver-info-section {
        padding: 1.5rem;
    }

    .driver-info {
        flex-direction: column;
        align-items: center;
        text-align: center;
        gap: 1rem;
    }

    .driver-avatar {
        width: 50px;
        height: 50px;
        font-size: 1.2rem;
    }

    .driver-details h4 {
        font-size: 1.1rem;
    }

    .driver-meta {
        justify-content: center;
        flex-direction: column;
        gap: 0.5rem;
    }

    .driver-stats-section {
        padding: 1.25rem;
    }

    .stats-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 0.75rem;
        margin-bottom: 1rem;
    }

    .stat-item {
        padding: 0.5rem;
        gap: 0.5rem;
    }

    .stat-icon {
        width: 30px;
        height: 30px;
        font-size: 0.8rem;
    }

    .stat-value {
        font-size: 0.9rem;
    }

    .stat-label {
        font-size: 0.7rem;
    }

    .vehicle-preview {
        padding: 0.75rem;
        gap: 0.5rem;
    }

    .vehicle-icon {
        width: 35px;
        height: 35px;
        font-size: 0.9rem;
    }

    .vehicle-info h6 {
        font-size: 0.9rem;
    }

    .vehicle-details {
        font-size: 0.75rem;
    }

    .driver-actions {
        flex-direction: column;
        gap: 0.5rem;
    }

    .driver-actions .btn-message,
    .driver-actions .btn-profile,
    .driver-actions .btn-email {
        justify-content: center;
        width: 100%;
        font-size: 0.85rem;
    }
}
</style>
